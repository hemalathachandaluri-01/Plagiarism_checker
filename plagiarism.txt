package plagiarism;

import java.io.File;
import java.io.IOException;
import java.util.Scanner;

import com.fasterxml.jackson.core.exc.StreamReadException;
import com.fasterxml.jackson.databind.DatabindException;
import com.fasterxml.jackson.databind.ObjectMapper;


public class PlagiarismDetector {

	static double percentage;
	static String stringOne = null;
	static String stringTwo = null;
	
	public static void main(String[] args) throws StreamReadException, DatabindException, IOException {

		ObjectMapper mapper = new ObjectMapper();

		//Read object from file
		
		File starting = new File(System.getProperty("user.dir"));
		
		Config config = mapper.readValue(new File(starting,"config.json"), Config.class);
		
		stringOne = readStringFromFile(config.File1_Path);

		stringTwo = readStringFromFile(config.File2_Path);

		percentage = config.PlagiarismPercentage;

		if (stringOne == null || stringTwo == null) {
			return;
		}

		System.out.println("Comparing the 2 files!!");
		System.out.println("The result of the 2 files is ....");

		if (compareStrings(stringOne, stringTwo)) {
			double percentageValue = percentage*100;
			
			System.out.println("Plagiarism detected and the percentage is : " + (int) percentageValue+ "%");
		} else {
			System.out.println("No plagiarism detected");
		}
	}

	public static String readStringFromFile(String filename) {
		
		String builder = "";
		
		try {
			Scanner fileReader = new Scanner(new File(filename));
			while (fileReader.hasNextLine()) {
				builder = builder + fileReader.nextLine() + "\n";
			}

			return builder;
		} catch (Exception e) {
			System.out.println("An error occurred while trying to open the file " + filename);
			return null;
		}
	}

	public static boolean compareStrings(String a, String b) throws StreamReadException, DatabindException, IOException {
		
		boolean checkForPlagiarism = false;
		
		String[] piecesA = a.split("\\s");
		String[] piecesB = b.split("\\s");

		double count1 = 0.0;
		double count2 = 0.0;

		for (int counter = 0; counter < piecesA.length; counter++) {
			
			for (int counter2 = 0; counter2 < piecesB.length; counter2++) {
				if (piecesA[counter].equals(piecesB[counter2])) {
					count1++;
				}
			}
		}
		for (int counter = 0; counter < piecesB.length; counter++) {
			
			for (int counter2 = 0; counter2 < piecesA.length; counter2++) {
				if (piecesA[counter2].equals(piecesB[counter])) {
					count2++;
				}
			}
		}

		if ((count1 / piecesA.length) >=  percentage && (count2 / piecesB.length) >= percentage) {
			
			checkForPlagiarism = true;
		}
		return checkForPlagiarism;
	}


}